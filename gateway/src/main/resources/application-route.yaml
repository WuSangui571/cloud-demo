spring:
  cloud:
    gateway:
      routes:
#        - id: bing-route
#          uri: https://cn.bing.com
#          predicates:
#            - name: Path
#              args:
#                patterns: /search
#            - name: Query
#              args:
#                param: q
#                regexp: haha
#            - Vip=user,sangui

        # id 全局唯一
        - id: order-route
          # 指定服务名称，lb 是 loadBalance 的缩写，代表负载均衡
          uri: lb://service-order
          # 指定断言规则，即路由匹配规则。
          predicates:
            - Path=/api/order/**
            # 可添加更多路径规则...
            # - Path=......
          filters:
            # 类似把 /api/order/a/bc 重写为 /a/bc，移除路径前的 /api/order/
            - RewritePath=/api/order/?(?<segment>.*), /$\{segment}
            # 添加新的响应头，添加的 key 是 sangui，value 是 blog
            - OnceToken=X-Response-Token, uuid
            # - AddResponseHeader=sangui, blog
          # order 代表顺序，数字越小，优先级越高
          # order: 1

        # 下一个路由规则
        - id: product-route
          uri: lb://service-product
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/product/?(?<segment>.*), /$\{segment}
          # order: 2


